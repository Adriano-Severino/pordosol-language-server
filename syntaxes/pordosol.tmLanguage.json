{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Por Do Sol",
    "scopeName": "source.pordosol",
    "patterns": [
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#types" },
        { "include": "#operators" },
        { "include": "#strings" },
        { "include": "#interpolated-strings" },
        { "include": "#numbers" },
        { "include": "#classes" },
        { "include": "#functions" },
        { "include": "#namespaces" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.pordosol",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.pordosol",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.pordosol",
                    "match": "\\b(se|então|senão|enquanto|para|funcao|retorne|imprima|novo|este)\\b"
                },
                {
                    "name": "keyword.other.pordosol",
                    "match": "\\b(espaco|classe|construtor|var)\\b"
                },
                {
                    "name": "storage.modifier.pordosol",
                    "match": "\\b(publico|privado|protegido)\\b"
                },
                {
                    "name": "constant.language.boolean.pordosol",
                    "match": "\\b(verdadeiro|falso)\\b"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.pordosol",
                    "match": "\\b(inteiro|texto|booleano|vazio)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.assignment.pordosol",
                    "match": "="
                },
                {
                    "name": "keyword.operator.comparison.pordosol",
                    "match": "(==|!=|<=|>=|<|>)"
                },
                {
                    "name": "keyword.operator.arithmetic.pordosol",
                    "match": "(\\+|\\-|\\*|/|%)"
                },
                {
                    "name": "keyword.operator.logical.pordosol",
                    "match": "(&&|\\|\\||!)"
                },
                {
                    "name": "keyword.operator.access.pordosol",
                    "match": "\\."
                },
                {
                    "name": "keyword.operator.arrow.pordosol",
                    "match": "=>"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.pordosol",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.pordosol",
                    "match": "\\\\."
                }
            ]
        },
        "interpolated-strings": {
            "name": "string.interpolated.pordosol",
            "begin": "\\$\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "meta.interpolation.pordosol",
                    "begin": "\\{",
                    "end": "\\}",
                    "patterns": [
                        { "include": "$self" }
                    ]
                },
                {
                    "name": "constant.character.escape.pordosol",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.pordosol",
                    "match": "\\b[0-9]+\\b"
                }
            ]
        },
        "classes": {
            "patterns": [
                {
                    "name": "entity.name.type.class.pordosol",
                    "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.pordosol",
                    "match": "\\b[a-z][a-zA-Z0-9_]*(?=\\s*\\()"
                }
            ]
        },
        "namespaces": {
            "patterns": [
                {
                    "name": "entity.name.type.namespace.pordosol",
                    "match": "(?<=espaco\\s+)\\b[A-Z][a-zA-Z0-9_]*\\b"
                }
            ]
        }
    }
}